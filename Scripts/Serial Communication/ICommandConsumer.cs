/// <summary>
/// Consumes commands generated by the printer controller.
/// </summary>
public interface ICommandConsumer {
	#if !UNITY_IOS && !UNITY_ANDROID
	/// <summary>
	/// Gets a value indicating whether this <see cref="ICommandConsumer"/> provides feedback.
	/// </summary>
	/// <value>
	/// <c>true</c> if provides feedback; otherwise, <c>false</c>.
	/// </value>
	bool providesFeedback { get; }

	/// <summary>
	/// Returns the number of packets still queued.
	/// </summary>
	/// <value>The number of unsent packets.</value>
	int packetsRemaining { get; }

	/// <summary>
	/// Returns the last temperature of the
	/// requested heater.
	/// </summary>
	/// <returns>The temperature of heater #index.</returns>
	/// <param name="index">The heater index, 0-based.</param>
	int HeaterTemp(int index);

	/// <summary>
	/// Returns the bytes available to receive.
	/// </summary>
	/// <value>The rx bytes available.</value>
	int rxBytesAvailable { get; }

	/// <summary>
	/// Returns the number of motor queue slots open.
	/// </summary>
	/// <value>The motor queue slots available.</value>
	int motorQueueAvailable { get; }

	/// <summary>
	/// Returns whether or not the consumer is seeking.
	/// </summary>
	/// <value><c>true</c> if is seeking; otherwise, <c>false</c>.</value>
	bool isSeeking { get; }

	/// <summary>
	/// Prepare to send packets.
	/// </summary>
	void BeginSendingPackets();

	/// <summary>
	/// Finished sending packets for now.
	/// </summary>
	void EndSendingPackets();

	/// <summary>
	/// Queues a packet to send.
	/// </summary>
	/// <param name='aCommand'>
	/// A command.
	/// </param>
	void SendPacket(GanglionCommand aCommand);
	
	/// <summary>
	/// Queues a packet to send.
	/// </summary>
	/// <param name='aCommand'>
	/// A command.
	/// </param>
	/// <param name='anArg'>
	/// An argument.
	/// </param>
	void SendPacket(GanglionCommand aCommand, int anArg);
	
	/// <summary>
	/// Sends a pre-made packet.
	/// </summary>
	/// <param name='datum'>
	/// Datum.
	/// </param>
	void SendPacket(TxPacket datum);
#endif
}
